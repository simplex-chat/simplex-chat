{-# LANGUAGE DuplicateRecordFields #-}
{-# LANGUAGE OverloadedLists #-}
{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE NamedFieldPuns #-}

module API.Docs.Commands where

import API.TypeInfo
import Data.ByteString.Char8 (ByteString)
import Data.String
import Data.Text (Text)

chatCommandsDocs :: [CCCategory]
chatCommandsDocs = map toCategory chatCommandsDocsData
  where
    toCategory (categoryName, categoryDescr, commandsData) =
      CCCategory {categoryName, categoryDescr, commands = map toCmd commandsData}
    toCmd (consName, commandDescr, syntax, responses, errors, network) =
      CCDoc {consName, commandDescr, syntax, responses, errors, network}

data CCCategory = CCCategory
  { categoryName :: Text,
    categoryDescr :: Text,
    commands :: [CCDoc]
  }

data CCDoc = CCDoc
  { consName :: ConsName,
    commandDescr :: Text,
    syntax :: ByteString,
    responses :: [TypeDoc],
    errors :: [TypeDoc],
    network :: UsesNetwork
  }

data TypeDoc = TD
  { consName :: ConsName,
    description :: Text
  }

type TypeDocTuple = (ConsName, Text)

type UsesNetwork = Bool

instance IsString TypeDoc where fromString s = TD s ""


-- category name, category description, commands
-- inner: constructor, syntax, description, responses, errors (ChatErrorType constructors)
chatCommandsDocsData :: [(Text, Text, [(ConsName, Text, ByteString, [TypeDoc], [TypeDoc], UsesNetwork)])]
chatCommandsDocsData =
  [ ( "Address commands",
      "Bots can use these commands to automatically check and create address when initialized",
      [ ("APICreateMyAddress", "Create bot address.", "", [], [], False),
        ("APIDeleteMyAddress", "Delete bot address.", "", [], [], False),
        ("APIShowMyAddress", "Get bot address and settings.", "", [], [], False),
        ("APISetProfileAddress", "Add address to bot profile.", "", [], [], False),
        ("APISetAddressSettings", "Set bot address settings.", "", [], [], False)
      ]
    ),
    ( "Message commands",
      "Commands to send, update, delete, moderate messages and set message reactions",
      [ ("APISendMessages", "Send messages.", "", [], [], False),
        ("APIReportMessage", "Report message.", "", [], [], False),
        ("APIUpdateChatItem", "Update message.", "", [], [], False),
        ("APIDeleteChatItem", "Delete message.", "", [], [], False),
        ("APIDeleteMemberChatItem", "Moderate message.", "", [], [], False),
        ("APIChatItemReaction", "Add/remove message reaction.", "", [], [], False),
        ("APIGetReactionMembers", "Get reaction members.", "", [], [], False)
      ]
    ),
    ( "File commands",
      "Commands to receive and to cancel files. Files are sent as part of the message, there are no separate commands to send files.",
      [ ("ReceiveFile", "Receive file.", "", [], [], False),
        ("CancelFile", "Cancel file.", "", [], [], False)
      ]
    ),
    ( "Group commands",
      "Commands to create and manage groups. These commands have to be used to manage business chats as well - they are groups. E.g., a common scenario would be to add human agents to business chat with the customer who connected via business address.",
      [ ("APINewGroup", "Create group.", "", [], [], False),
        ("APIAddMember", "Add contact to group.", "", [], [], False),
        ("APIJoinGroup", "Join group.", "", [], [], False),
        ("APIAcceptMember", "Accept group member.", "", [], [], False),
        ("APIMembersRole", "Set members role.", "", [], [], False),
        ("APIBlockMembersForAll", "Block members.", "", [], [], False),
        ("APIRemoveMembers", "Remove members.", "", [], [], False),
        ("APILeaveGroup", "Leave group.", "", [], [], False),
        ("APIListMembers", "Get group members.", "", [], [], False),
        ("APIUpdateGroupProfile", "Update group profile.", "", [], [], False)
      ]
    ),
    ( "Group link commands",
      "These commands can be used by bots that manage multiple public groups",
      [ ("APICreateGroupLink", "Create group link.", "", [], [], False),
        ("APIGroupLinkMemberRole", "Set member role for group link.", "", [], [], False),
        ("APIDeleteGroupLink", "Delete group link.", "", [], [], False),
        ("APIGetGroupLink", "Get group link.", "", [], [], False)
      ]
    ),
    ( "Connection commands",
      "These commands may be used to establish connections. Most bots do not need to use them - bot users will connect via bot address with auto-accept enabled.",
      [ ("APIAddContact", "Create 1-time invitation link.", "", [], [], False),
        ("APIConnectPlan", "Determine SimpleX link type and if the bot is already connected via this link.", "", [], [], True),
        ("APIConnect", "Connect via SimpleX link. The link can be 1-time invitation link, contact address or group link", "", [], [], False),
        ("APIAcceptContact", "Accept contact request.", "", [], [], False),
        ("APIRejectContact", "Reject contact request.", "", [], [], False)
      ]
    ),
    ( "User profile commands",
      "Most bots don't need to use these commands, as bot profile can be configured manually via CLI or desktop client. These commands can be used by bots that need to manage multiple user profiles (e.g., the profiles of support agents).",
      [ ("ShowActiveUser", "Get active user profile", "/user", ["CRActiveUser"], [], False),
        ("CreateActiveUser", "Create new user profile", "/_create user <json(NewUser)>", ["CRActiveUser"], ["CEUserExists", "CEInvalidDisplayName"], False),
        ("ListUsers", "Get all user profiles", "/users", ["CRUsersList"], [], False),
        ("APISetActiveUser", "Set active user profile", "/_user <UserId>[ <quoted(UserPwd)>]", ["CRActiveUser"], ["CEChatNotStarted"], False),
        ("APIDeleteUser", "Delete user profile.", "", [], [], True),
        ("APIUpdateProfile", "Update user profile.", "", [], [], False)
      ]
    ),
    ( "Chat commands",
      "Commands to get and to manage coversations.",
      [ ("APIGetChats", "Get chats.", "", [], [], False),
        ("APIGetChat", "Get chat.", "", [], [], False),
        ("APIGetChatItems", "Get messages.", "", [], [], False),
        ("APIGetChatItemInfo", "Get message information.", "", [], [], False),
        ("APIChatRead", "Mark chat as read.", "", [], [], False),
        ("APIChatItemsRead", "Mark items as read.", "", [], [], False),
        ("APIChatUnread", "Mark chat as unread.", "", [], [], False),
        ("APIDeleteChat", "Delete chat.", "", [], [], False),
        ("APIClearChat", "Clear chat.", "", [], [], False),
        ("APISetContactPrefs", "Set contact preferences.", "", [], [], False),
        ("APISetContactAlias", "Set contact alias.", "", [], [], False),
        ("APISetGroupAlias", "Set group alias.", "", [], [], False),
        ("APISetConnectionAlias", "Set connection alias.", "", [], [], False),
        ("APISetChatTTL", "Set TTL for chat messages.", "", [], [], False),
        ("APISetChatSettings", "Set chat settings.", "", [], [], False),
        ("APISyncContactRatchet", "Synchronize encryption with contact.", "", [], [], False),
        ("APISyncGroupMemberRatchet", "Synchronize encryption with member.", "", [], [], False),
        ("APIListContacts", "Get contacts.", "", [], [], False),
        ("APIListGroups", "Get groups.", "", ["CRGroupsList"], [], False)
      ]
    )
  ]

cliCommands :: [ConsName]
cliCommands =
  [ "SetActiveUser",
    "SetUserContactReceipts",
    "SetUserGroupReceipts",
    "HideUser",
    "UnhideUser",
    "MuteUser",
    "UnmuteUser",
    "DeleteUser",
    "ReportMessage",
    "UserRead",
    "SendCallInvitation",
    "SetChatTTL",
    "GetChatTTL",
    "SetShowMessages",
    "SetSendReceipts",
    "SetShowMemberMessages",
    "ContactInfo",
    "ShowGroupInfo",
    "GroupMemberInfo",
    "ContactQueueInfo",
    "GroupMemberQueueInfo",
    "SwitchContact",
    "SwitchGroupMember",
    "AbortSwitchContact",
    "AbortSwitchGroupMember",
    "SyncContactRatchet",
    "SyncGroupMemberRatchet",
    "GetContactCode",
    "GetGroupMemberCode",
    "VerifyContact",
    "VerifyGroupMember",
    "EnableContact",
    "EnableGroupMember",
    "ChatHelp",
    "Welcome",
    "AddContact",
    "Connect",
    "ConnectSimplex",
    "DeleteContact",
    "ClearContact",
    "ListContacts",
    "CreateMyAddress",
    "DeleteMyAddress",
    "ShowMyAddress",
    "SetProfileAddress",
    "SetAddressSettings",
    "AcceptContact",
    "RejectContact",
    "ForwardMessage",
    "ForwardGroupMessage",
    "ForwardLocalMessage",
    "SendMessage",
    "SendMemberContactMessage",
    "SendLiveMessage",
    "SendMessageQuote",
    "SendMessageBroadcast",
    "DeleteMessage",
    "DeleteMemberMessage",
    "EditMessage",
    "UpdateLiveMessage",
    "ReactToMessage",
    "NewGroup",
    "AddMember",
    "JoinGroup",
    "AcceptMember",
    "MemberRole",
    "BlockForAll",
    "RemoveMembers",
    "LeaveGroup",
    "DeleteGroup",
    "ClearGroup",
    "ListMembers",
    "ListMemberSupportChats",
    "ListGroups",
    "UpdateGroupNames",
    "ShowGroupProfile",
    "UpdateGroupDescription",
    "ShowGroupDescription",
    "CreateGroupLink",
    "GroupLinkMemberRole",
    "DeleteGroupLink",
    "ShowGroupLink",
    "SendGroupMessageQuote",
    "ClearNoteFolder",
    "LastChats",
    "LastMessages",
    "LastChatItemId",
    "ShowChatItem",
    "ShowChatItemInfo",
    "ShowLiveItems",
    "SendFile",
    "SendImage",
    "ForwardFile",
    "ForwardImage",
    "SendFileDescription",
    "FileStatus",
    "ShowProfile",
    "UpdateProfile",
    "UpdateProfileImage",
    "ShowProfileImage",
    "SetUserFeature",
    "SetContactFeature",
    "SetGroupFeature",
    "SetGroupFeatureRole",
    "SetGroupMemberAdmissionReview",
    "SetUserTimedMessages",
    "SetContactTimedMessages",
    "SetGroupTimedMessages",
    "SetLocalDeviceName",
    "QuitChat",
    "ShowVersion"
  ]

undocdCommands :: [ConsName]
undocdCommands =
  [ "SetAllContactReceipts",
    "APISetUserContactReceipts",
    "APISetUserGroupReceipts",
    "APIHideUser",
    "APIUnhideUser",
    "APIMuteUser",
    "APIUnmuteUser",
    "StartChat",
    "CheckChatRunning",
    "APIStopChat",
    "APIActivateChat",
    "APISuspendChat",
    "ResubscribeAllConnections",
    "SetTempFolder",
    "SetFilesFolder",
    "SetRemoteHostsFolder",
    "APISetAppFilePaths",
    "APISetEncryptLocalFiles",
    "SetContactMergeEnabled",
    "APIExportArchive",
    "ExportArchive",
    "APIImportArchive",
    "APIDeleteStorage",
    "APIStorageEncryption",
    "TestStorageEncryption",
    "SlowSQLQueries",
    "ExecChatStoreSQL",
    "ExecAgentStoreSQL",
    "APISaveAppSettings",
    "APIGetAppSettings",
    "APIGetChatTags",
    "APICreateChatTag",
    "APISetChatTags",
    "APIDeleteChatTag",
    "APIUpdateChatTag",
    "APIReorderChatTags",
    "APICreateChatItems",
    "APIPlanForwardChatItems",
    "APIForwardChatItems",
    "APIArchiveReceivedReports",
    "APIDeleteReceivedReports",
    "APIUserRead",
    "APISendCallInvitation",
    "APIRejectCall",
    "APISendCallOffer",
    "APISendCallAnswer",
    "APISendCallExtraInfo",
    "APIEndCall",
    "APIGetCallInvitations",
    "APICallStatus",
    "APIGetNetworkStatuses",
    "APISetUserUIThemes",
    "APISetChatUIThemes",
    "APIGetNtfToken",
    "APIRegisterToken",
    "APIVerifyToken",
    "APICheckToken",
    "APIDeleteToken",
    "APIGetNtfConns",
    "APIGetConnNtfMessages",
    "APIDeleteMemberSupportChat",
    "APIAddGroupShortLink",
    "APICreateMemberContact",
    "APISendMemberContactInvitation",
    "GetUserProtoServers",
    "SetUserProtoServers",
    "APITestProtoServer",
    "TestProtoServer",
    "APIGetServerOperators",
    "APISetServerOperators",
    "SetServerOperators",
    "APIGetUserServers",
    "APISetUserServers",
    "APIValidateServers",
    "APIGetUsageConditions",
    "APISetConditionsNotified",
    "APIAcceptConditions",
    "APISetChatItemTTL",
    "SetChatItemTTL",
    "APIGetChatItemTTL",
    "GetChatItemTTL",
    "APISetNetworkConfig",
    "APIGetNetworkConfig",
    "SetNetworkConfig",
    "APISetNetworkInfo",
    "ReconnectAllServers",
    "ReconnectServer",
    "APISetMemberSettings",
    "APIContactInfo",
    "APIGroupInfo",
    "APIGroupMemberInfo",
    "APIContactQueueInfo",
    "APIGroupMemberQueueInfo",
    "APISwitchContact",
    "APISwitchGroupMember",
    "APIAbortSwitchContact",
    "APIAbortSwitchGroupMember",
    "APIEnableContact",
    "APIEnableGroupMember",
    "APIGetContactCode",
    "APIGetGroupMemberCode",
    "APIVerifyContact",
    "APIVerifyGroupMember",
    "APISetConnectionIncognito",
    "APIChangeConnectionUser",
    "APIPrepareContact",
    "APIPrepareGroup",
    "APIChangePreparedContactUser",
    "APIChangePreparedGroupUser",
    "APIConnectPreparedContact",
    "APIConnectPreparedGroup",
    "APIConnectContactViaAddress",
    "APIAddMyAddressShortLink",
    "SetFileToReceive",
    "ListRemoteHosts",
    "StartRemoteHost",
    "SwitchRemoteHost",
    "StopRemoteHost",
    "DeleteRemoteHost",
    "StoreRemoteFile",
    "GetRemoteFile",
    "ConnectRemoteCtrl",
    "FindKnownRemoteCtrl",
    "ConfirmRemoteCtrl",
    "VerifyRemoteCtrlSession",
    "ListRemoteCtrls",
    "StopRemoteCtrl",
    "DeleteRemoteCtrl",
    "APIUploadStandaloneFile",
    "APIDownloadStandaloneFile",
    "APIStandaloneFileInfo",
    "DebugLocks",
    "DebugEvent",
    "GetAgentSubsTotal",
    "GetAgentServersSummary",
    "ResetAgentServersStats",
    "GetAgentSubs",
    "GetAgentSubsDetails",
    "GetAgentWorkers",
    "GetAgentWorkersDetails",
    "GetAgentQueuesInfo",
    "CustomChatCommand"
  ]
